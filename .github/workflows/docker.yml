#workflow (update build) to run whenever we update main
name: "Update Docker Build"
on:
  push:
    branches:
      - main
      - add/docker-ci
  workflow_dispatch:

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest"

    #workflow actions have permissions - normally read-only but we want to upload a container image that we're building
    permissions:
      packages: write
      contents: read

    steps:
      - name: "Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: "Checkout repository"
        uses: actions/checkout@v4
        # Checks out the repository where the Dockerfile and source code are stored

      - name: "Run Gradle installDist"
        run: gradle installDist
        # Runs the Gradle installDist task to prepare the build artefacts

      - name: "Log Gradle installDist output"
        run: |
          echo "Gradle installDist output:"
          ls -R build/install
        # Logs the Gradle output for debugging and verification

      - name: "Configure Docker metadata using Docker/metadata-action"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/Yellowjeebz/PRP-Recipe-Suggestion-Solution
          tags: |
            type=sha
            type=raw,value=latest
        # Configures Docker metadata for tagging and labelling the container image

      - name: "Authenticate with Docker"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        # Logs in to Docker registry using GitHub's secrets

      - name: "Set up Docker buildx"
        uses: docker/setup-buildx-action@v3
        # Sets up Docker buildx, allowing multi-platform builds

      - name: "Build and upload the Docker image"
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        #builds the Docker image and pushes it to the specified container registry
